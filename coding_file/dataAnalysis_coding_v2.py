import time

import pexpect

from sub_action import Sub

import os, sys, json, jsonpath


class data_analysis_v2(Sub):
    setKey_data_dict = {}
    errorKey_list = []
    json_script_data = {}
    init_dict = {
        'setkey_script': [{'expect': 'password'}, {'sendline': 'root'}, {'expect': 'root@'}, {'sendline': 'cd /tmp/'},
                          {'expect': '/tmp'}]}
    p_login = {'p_login': [{'expect': 'password'},
                           {'sendline': 'root'},
                           {'expect': 'root@'},
                           {'sendline': "cd /tmp/"},
                           {'expect': "/tmp"},
                           {'sendline': 'sync'},
                           {'sendline': 'exit'}, ]}

    @staticmethod
    def found_info_between(stmt, former, latter=None):
        """

        :param stmt: line
        :param former: first index position
        :param latter: second index position
        :return:
        """
        if not latter:
            return stmt[stmt.index(former) + len(former):].strip()
        else:
            return stmt[stmt.index(former) + len(former):stmt.index(latter) - 1].strip()

    @staticmethod
    def formatData(stmt):
        for i in range(len(stmt)):
            try:
                int(stmt[i], 16)
            except ValueError:
                stmt[i] = ""
            if stmt[i]:
                if len(stmt[i]) == 2:
                    pass
                elif len(stmt[i]) == 1:
                    # print("type%s is:" % data[i], type(stmt[i]), stmt[i])
                    stmt[i] = "0" + stmt[i]
                else:
                    # print(X.repr_message("Popping up {0}, index {1}".format(stmt[i],i)))
                    stmt[i] = ""
        # pprint.pprint(stmt)
        if len(''.join(stmt)) % 2 == 0:
            return ''.join(stmt)
        else:
            raise ValueError("length should be even")

    @staticmethod
    def slice_input(data, step=100, **args):  # if len(data) more than 100
        slice_list = []
        index = [x for x in range(0, len(data), step)]
        for i in range(len(index)):
            if i != len(index) - 1:
                slice_list.append(data[index[i]:index[i + 1]] + "\\")
            else:
                slice_list.append(data[index[i]:])
        return slice_list
        # for i in range(len(index)):
        #     if i != len(index) - 1:
        #         # data_analysis_v2.init_dict["setkey_script"].append({"expect" : data[index[i]:index[i+1]] + "\\"})                 # version 1.0
        #         data_analysis_v2.init_dict["setkey_script"].append({"sendline": "tsd.persistence.client.mib3.app.SetKey --ns {0} --key {1} --val {2} slot: 0 ".format()})
        #     else:
        #         data_analysis_v2.init_dict["setkey_script"].append({"expect" : data[index[i]:]})
        # return data_analysis_v2.init_dict

    @staticmethod
    def save_like_a_json(jsonData, fileName='ns1000000.json', localPath=os.getcwd() + '/json_sets/'):
        return json.dump(jsonData, open(localPath + fileName, 'w'), ensure_ascii=False,
                         indent=4, separators=(", ", " : "))

    @staticmethod
    def create_json_file(jsonFile, nss = ("1000000","2000000","4000000")):  # create_json_file("ns1000000.json", ns = "1000000")
        data_analysis_v2.init_dict = {
            'p_setkey': [{'expect': 'password'},
                         {'sendline': 'root'},
                         {'expect': 'root@'},
                         {'sendline': 'cd /tmp/'},
                         {'expect': '/tmp'},
                         {'sendline': 'chmod +x tsd.*'}]}
        for ns in  nss:
            key_list = list(data_analysis_v2.get_json_info(jsonFile, "$.{0}..key".format(ns)))
            data_list = list(data_analysis_v2.get_json_info(jsonFile, "$.{0}..data".format(ns)))
            # RDI_list = jsonpath.jsonpath(json_data, "$..RDI")
            for i, j in zip(key_list, data_list):
                print("type of {0} is {1}".format(i,type(i)))
                data_analysis_v2.init_dict['p_setkey'].append(
                    {"sendline": "./tsd.persistence.client.mib3.app.SetKey --ns 0x{0} --key 0x{1} --val 0x{2}".format(ns, (hex(int(i)).upper())[2:], j)})
                data_analysis_v2.init_dict['p_setkey'].append(
                    {"expect": "store: ns: {0} key: {1} slot: 0 status: 0 ".format(ns, i)})
        data_analysis_v2.init_dict['p_setkey'].append({'sendline': 'sync'})
        data_analysis_v2.init_dict['p_setkey'].append({'sendline': 'exit'})
        return data_analysis_v2.init_dict

    @staticmethod
    def transfer_files(cls, fileList):
        for i in fileList:
            # cls.doPexpect(cls.copy_file_to_HU(i))
            print(cls.adv_doPexpect(cls.copy_file_to_HU(i), "p_script1.json", "$.p_script1.*"))
            time.sleep(1)

    @staticmethod
    def adv_doPexpect(p_command, json_name, jsonpath_command, log_name="logs.txt"):  # add on 9/19/2022
        """

        :param p_command:
        :param json_name:
        :param jsonpath_command:
        :param log_name:
        :return:
        """
        # def adv_doPexpect(p_command, json_name, jsonpath_command):
        # with open("logs.txt", 'w') as my_log_file:
        with open(log_name, 'w') as my_log_file:  # add on 9/19/2022
            p = pexpect.spawn(command=p_command, logfile=my_log_file, encoding='utf-8', timeout=20)
            # json_list = HU.get_json_info("p_script1.json", "$.p_script1.*")
            json_list = data_analysis_v2.get_json_info(json_name, jsonpath_command)
            for i in json_list:
                print(i)
                try:
                    data_analysis_v2.pAction(list(i.items())[0], p)
                except pexpect.TIMEOUT:
                    print(p.before, p.after)
                # print("%s pass"%(i))
            p.expect(pexpect.EOF)  # Add in 9/19/2022
            p.close()
            # return HU.greenFont(HU.repr_message("Success to copy file to HU"))
            return data_analysis_v2.greenFont(data_analysis_v2.repr_message("Successful"))
            # print(cls.copy_file_to_HU(i))
        # for key in RDI_list:
        #     new_sub.init_dict['p_read_script1'].append(
        #         {"sendline": "tsd.persistence.client.mib3.app.GetKey --ns {0} --key {1}".format(
        #             X.key_Namehex_dict.get(key), key)})
        #     # print("type of %s is" % key, type(key))
        #     # """Set the final expect command"""
        #     # with open('logs_0909.txt', 'w') as file:
        #     #     for line in file:
        #     #         # print('type of %s: %s' %(key,type(key)))
        #     #         if line.startswith('load') and line.find(str(int(key,16))) != -1:
        #     #             new_sub.init_dict['p_read_script1'].append({"expect": line.rstrip('\n')})
        #     Sub.init_dict['p_read_script1'].append({"expect": "load: ns: {0} key: {1} slot: 0 ".format(
        #         X.key_Namehex_dict.get(key)[2:], str(int(key, 16)))})
        # #      {"sendline": "load: ns: {0} key: {1} slot: 0 status: 0".format(ns[3:], str(int(key,16)))})
        # new_sub.init_dict['p_read_script1'].append({'sendline': 'sync'})
        # new_sub.init_dict['p_read_script1'].append({'sendline': 'exit'})
        # # rename key in dictionary
        # new_sub.init_dict['p_setGetKey_script1'] = new_sub.init_dict.pop('p_read_script1')
        # return new_sub.init_dict


json_data = {
    "Codings": {
        "byte_0_Marke": "0x02",
        "byte_0_Fahrzeug_Segment": "0x04",
        "byte_1_Fahrzeug_Generation": "0x08",
        "byte_1_Fahrzeug_Bodystyle": "0x02",
        "byte_2_Fahrzeug_Zusatz_Bodystyle": "0x00",
        "byte_2_Fertigungsregion": "0x02",
        "byte_3_Fahrzeug_Antriebsart": "0x00",
        "byte_3_Lenkigkeit": "0x00",
        "byte_4_Most_Ring": "0x00",
        "byte_4_Optische_Weckbarkeit": "0x00",
        "byte_4_EECL_Wecken": "0x00",
        "byte_5_Fahrzeug_Zusatz_Allroad_alltrack_cross": "0x00",
        "byte_5_Fahrzeug_Zusatz_Kurzer_Radstand": "0x00",
        "byte_5_Fahrzeug_Zusatz_Langer_Radstand": "0x00",
        "byte_5_Fahrzeug_Zusatz_Pritsche": "0x00",
        "byte_5_Fahrzeug_Zusatz_Zugkopf": "0x00",
        "byte_5_Fahrzeug_Zusatz_Kundenspezifisch": "0x00",
        "byte_5_Fahrzeug_Zusatz_Leistungsstufe_1": "0x00",
        "byte_5_Fahrzeug_Zusatz_Leistungsstufe_2": "0x00",
        "byte_6_Fahrzeug_Zusatz_Leistungsstufe_3": "0x00",
        "byte_6_Fahrzeug_Zusatz_Modifiziertes_Antriebskonzept": "0x00",
        "byte_6_Fahrzeug_Zusatz_PA1": "0x01",
        "byte_6_Fahrzeug_Zusatz_PA2": "0x00"
    },
    "Adaptions": [
        {
            "RDI": "0x04FB",
            "Name": "Activate roller test stand mode",
            "Value": {
                "Status": "0x00"
            }
        },
        {
            "RDI": "0x04FC",
            "Name": "Deactivate productionmode",
            "Value": {
                "P-Mode Parameter Deaktivierung": "0x00 0x00 0x00"
            }
        }
    ],
    "Datasets": [
        {
            "RDI": "0x7201",
            "Name": "Audio parameter sound",
            "Value": {
                "Version": "0x30 0x30 0x41 0x34",
                "Data": "0x20 0x04 0x05 0x00 0x6E 0x00 0x78 0x00 0x14 0x00 0x14 0x00 0x00 0x06 0x05 0x03 0xE8 0x00 0x5A 0x00 0x14 0x00 0x14 0x00 0x00 0x01 0x14 0x27 0x10 0x00 0x78 0x00 0x01 0x0F 0x00 0x3C 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x23 0x28 0x2D 0x32 0x37 0x3C 0x40 0x43 0x46 0x49 0x4E 0x52 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x0B 0x0A 0x09 0x08 0x07 0x06 0x05 0x04 0x03 0x02 0x01 0x00 0x03 0x14 0x0F 0xA0 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x0A 0x0B 0x0C 0x0D 0x0E 0x0F 0x10 0x11 0x12 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x0A 0x0A 0x0A 0x0A 0x0A 0x0A 0x0A 0x0A 0x14 0x1E 0x1E 0x28 0x32 0x32 0x3C 0x46 0x50 0x5A 0x64 0x0A 0x0A 0x0A 0x0A 0x0A 0x0A 0x14 0x14 0x1E 0x1E 0x28 0x32 0x32 0x3C 0x46 0x50 0x5A 0x64 0x64 0x0A 0x0A 0x0A 0x0A 0x0A 0x14 0x14 0x1E 0x1E 0x28 0x32 0x32 0x3C 0x46 0x50 0x50 0x5A 0x64 0x64 0x0A 0x0A 0x0A 0x0A 0x14 0x14 0x1E 0x1E 0x28 0x28 0x32 0x3C 0x46 0x46 0x50 0x5A 0x64 0x64 0x64 0x0A 0x0A 0x0A 0x14 0x14 0x1E 0x1E 0x28 0x28 0x32 0x3C 0x3C 0x46 0x50 0x5A 0x64 0x64 0x64 0x64 0x0A 0x0A 0x14 0x1E 0x1E 0x28 0x28 0x32 0x32 0x3C 0x46 0x46 0x50 0x5A 0x64 0x64 0x64 0x64 0x64 0x0A 0x14 0x1E 0x1E 0x28 0x28 0x32 0x32 0x3C 0x3C 0x46 0x50 0x5A 0x64 0x64 0x64 0x64 0x64 0x64 0x06 0x0F 0x00 0x78 0x00 0x0A 0x0A 0x14 0x14 0x14 0x1E 0x1E 0x1E 0x1E 0x28 0x28 0x28 0x28 0x28 0x28 0x28 0x28 0x28 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x04 0x05 0x00 0x6E 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x04 0x05 0x00 0x6E 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x04 0x05 0x00 0x6E 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x04 0x05 0x00 0x6E 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x30 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x06 0x05 0x03 0xE8 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x06 0x05 0x03 0xE8 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x06 0x05 0x03 0xE8 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x06 0x05 0x03 0xE8 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20",
                "Checksum": "0x57 0x4D 0x17 0x68"
            }
        },
        {
            "RDI": "0x7203",
            "Name": "Audio parameter sound cabrio",
            "Value": {
                "Version": "0x30 0x30 0x43 0x34",
                "Data": "0x20 0x02 0x05 0x27 0x10 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x02 0x05 0x27 0x10 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x02 0x05 0x27 0x10 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x02 0x05 0x27 0x10 0x5A 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x14 0x00 0x14 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x64 0x01 0xF4 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00",
                "Checksum": "0x33 0x34 0x4D 0x50"
            }
        }
    ]
}

if __name__ == '__main__':
    dir_log = "log_sets/"
    logFile = "load_data.txt"
    os.system("cat {0} | grep {1} |tee {2} {3}".format("log_0919.txt", "load", "", dir_log + logFile))
    X = data_analysis_v2
    print(X.greenFont(X.repr_message("creat {0} successfully").format(logFile)))
    with open(dir_log + logFile, 'r') as file:
        # file = file.readlines()
        for line in file:
            if line != "\n":
                # print(line.rstrip("\n"))
                # if line[line.index("ns: ") +4: line.index("key") - 1] == "1000000":
                for ns in ["1000000", "4000000", "2000000"]:
                    if X.found_info_between(line, "ns:", "key") == ns:
                        if X.found_info_between(line, "status:", "data:") != "0":
                            # print(found_info_between(line,"status:","data:"))
                            X.errorKey_list.append(line)
                        else:
                            temp_dict = {}
                            temp_dict["key"] = X.found_info_between(line, "key:", "slot:")  # add on 9/21
                            if len(X.formatData(X.found_info_between(line, "data:").split())) > 100:
                                print(type("".join(X.slice_input(
                                    X.formatData(X.found_info_between(line, "data:").split())))))
                                temp_dict["data"] = "".join(X.slice_input(
                                    X.formatData(X.found_info_between(line, "data:").split())))
                                print("".join(X.slice_input(
                                    X.formatData(X.found_info_between(line, "data:").split()))))
                                # sys.exit()
                            else:
                                temp_dict["data"] = X.formatData(X.found_info_between(line, "data:").split())
                            # temp_dict[X.found_info_between(line, "key:", "slot:")] = X.found_info_between(line, "data:")
                            # print(temp_dict)
                            if not X.setKey_data_dict.get(ns, None):
                                X.setKey_data_dict[ns] = [temp_dict]
                            else:
                                X.setKey_data_dict[ns].append(temp_dict)

    import pprint

    print("*" * 60)
    pprint.pprint(X.errorKey_list)
    print("=" * 60)
    pprint.pprint(X.setKey_data_dict)
    # sys.exit()
    # for i in  X.setKey_data_dict["4000000"]:
    #     print(i)
    print("type of {0} is {1}".format("X.setKey_data_dict",type(X.setKey_data_dict)))

    X.save_like_a_json(X.setKey_data_dict)
    pprint.pprint(X.errorKey_list)  # >> errorList
    # print(list(X.get_json_info("ns1000000.json", "$.1000000..key")))
    # print(list(X.get_json_info("ns1000000.json", "$.1000000..data")))
    list_key = list(X.get_json_info("ns1000000.json", "$.1000000..key"))
    list_data = list(X.get_json_info("ns1000000.json", "$.1000000..data"))
    """Add on 9/21/2022"""
    # b = zip(list(X.get_json_info("ns1000000.json", "$.1000000..key")),list(X.get_json_info("ns1000000.json", "$.1000000..data")))
    # for i, j in zip(list_key,list_data):
    #     print(i,j)
    # pprint.pprint(X.create_json_file("ns1000000.json", ns="1000000"))
    # pprint.pprint(X.create_json_file("ns1000000.json"))  << new
    # sys.exit()
    # print("type of {0} is {1}".format("X.create_json_file(\"ns1000000.json\", ns=\"1000000\")", type(X.create_json_file("ns1000000.json", ns="1000000"))))
    # sys.exit()
    # X.save_like_a_json(jsonData = X.create_json_file("ns1000000.json", ns="1000000"),fileName="p_ns1000000_setkey.json")
    X.save_like_a_json(jsonData=X.create_json_file("ns1000000.json"), fileName="p_ns1000000_setkey.json")  # << new
    fileList = os.listdir(os.getcwd() + "/tools")
    X.transfer_files(X, fileList)
    p_command = "ssh root@192.168.1.4"
    print(X.adv_doPexpect(p_command, "p_check_script2.json", jsonpath_command="$.p_check_script2.*"))
    # change check p_check_script from 1 to 2.!!!!!!!!
    print(X.adv_doPexpect(p_command="ssh root@192.168.1.4", json_name="p_ns1000000_setkey.json",
                          jsonpath_command="$.{0}.*".format("p_setkey"), log_name="log_0921.txt"))
    print(X.greenFont(X.repr_message("Success to exec. Pexpect")))
    sys.exit()
    """End"""

    # def json_to_setkey(givenDict):






    sys.exit()
    print("%" * 60)
    # print(X.setKey_data_dict["1000000"][6]['1299'].split())
    data = X.setKey_data_dict["1000000"][6]['1299'].split()
    nsList_1000000 = [x for x in X.setKey_data_dict["1000000"]]
    temp_dict_2 = {}
    for i in nsList_1000000:
        for j, k in zip(i.values(), i.keys()):
            if len(X.formatData(j.split())) > 100:
                # print(k)
                # print(X.slice_input(X.formatData(j.split())))
                temp_dict_2[k] = X.slice_input(X.formatData(j.split()))
            else:
                temp_dict_2[k] = X.formatData(j.split())
            # print(X.formatData(j.split()))
    # nsList_1000000_
    pprint.pprint(temp_dict_2)
    for i in temp_dict_2:
        if type(temp_dict_2[i]) == list:
            print(i)

    # X.save_like_a_json(temp_dict_2)
    sys.exit()
    # for i in range(len(data)):
    #     try:
    #         int(data[i],16)
    #     except ValueError:
    #         i = None
    #     if data[i]:
    #         if len(data[i]) == 2:
    #             pass
    #         elif len(data[i]) == 1:
    #            print("type%s is:"%data[i], type(data[i]), data[i])
    #            data[i] = "0"+ data[i]
    # print(X.formatData(data))
    # print(data)
    print("X.formatData output: {0}".format(X.formatData(data)))
    data = '4d 31 34 31 2 68 ff ef 1 0 c 0 1 0 46 67 3 12 4 2 1 0 0 0 0 0 8e 0 0 0 5c 41 24 2 0 3 c4 20 0 0 0 0 20 43 ' \
           '52 43 3a 32 32 34 34 31 35 43 0 0 0 0 8c 0 0 0 f8 5b f3 8a ff ff ff ff 80 bf 5d 5 64 0 0 0 eb fb ea 14 84 ' \
           '3 0 0 a 6 24 17 3 0 0 0 4a de d2 25 2 0 0 0 9c dd 49 2d c0 5d 0 0 9a bc 65 42 3 0 0 0 bc f9 63 79 1 0 0 0 ' \
           '0 93 eb 94 dc 5 0 0 ad 21 c6 ac 64 0 0 0 f5 33 c7 bb 58 1b 0 0 91 a6 b9 be 1 0 0 0 93 6 4 ef 41 0 0 0 da ' \
           'a3 c5 f0 1 0 0 0 4c 80 43 f2 f 0 0 0 f8 5b f3 8a 0 0 0 0 31 64 48 11 55 1 0 0 15 cb 94 3b 3 0 0 0 d1 aa ' \
           '66 52 1c c 0 0 8a 30 1f 58 20 0 0 0 23 7a e4 6a 74 0 0 0 d9 1 0 0 7f fb ff ff 48 1 0 0 f4 1 0 0 ae ff ff ' \
           'ff 0 1 0 0 9d 0 0 0 b0 4 0 0 9a 1 0 0 96 0 0 0 f3 1 0 0 f9 1 0 0 6d 1 0 0 9c fe ff ff cb 9 0 0 d8 9 0 0 ' \
           '2a ff ff ff 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 82 4a 54 6e 3 0 0 0 df e0 4e 76 7 0 0 0 cf 45 ' \
           'ed 79 2 0 0 0 4a 8 69 b3 1 0 0 0 0 0 0 0 2 0 0 0 3 0 0 0 4 0 0 0 5 0 0 0 6 0 0 0 7 0 0 0 8 0 0 0 9 0 0 0 ' \
           'a 0 0 0 b 0 0 0 c 0 0 0 d 0 0 0 e 0 0 0 f 0 0 0 10 0 0 0 11 0 0 0 12 0 0 0 13 0 0 0 14 0 0 0 15 0 0 0 16 ' \
           '0 0 0 17 0 0 0 18 0 0 0 19 0 0 0 1a 0 0 0 1b 0 0 0 1c 0 0 0 1d 0 0 0 27 36 b b8 c8 32 0 0 7b 96 7f bd 3 0 ' \
           '0 0 fb c5 5d d6 1e 0 0 0 f8 5b f3 8a 1 0 0 0 31 64 48 11 c2 0 0 0 15 cb 94 3b 3 0 0 0 8a 30 1f 58 19 0 0 ' \
           '0 f8 5b f3 8a 2 0 0 0 2e ca b9 46 b4 0 0 0 f8 5b f3 8a 3 0 0 0 2e ca b9 46 b4 0 0 0 f8 5b f3 8a 4 0 0 0 ' \
           '2e ca b9 46 b4 0 0 0 f8 5b f3 8a 5 0 0 0 2e ca b9 46 b4 0 0 0 f8 5b f3 8a 6 0 0 0 2e ca b9 46 b4 0 0 0 f8 ' \
           '5b f3 8a 7 0 0 0 2e ca b9 46 b4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ' \
           '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ' \
           '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ' \
           '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ' \
           '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 tsd.persistence.client.mib3.app.GetKey --ns 0x1000000 ' \
           '--key 0x04FB '
    # pprint.pprint(data.split())
    # print(X.formatData(data.split()))
    data = "4d3134310268ffef01000c0001004667031204020100000000008e0000005c4124020003c42000000000204352433a32323434313543000000008c000000f85bf38affffffff80bf5d0564000000ebfbea14840300000a062417030000004aded225020000009cdd492dc05d00009abc654203000000bcf96379010000000093eb94dc050000ad21c6ac64000000f533c7bb581b000091a6b9be01000000930604ef41000000daa3c5f0010000004c8043f20f000000f85bf38a00000000316448115501000015cb943b03000000d1aa66521c0c00008a301f5820000000237ae46a74000000d90100007ffbffff48010000f4010000aeffffff000100009d000000b00400009a01000096000000f3010000f90100006d0100009cfeffffcb090000d80900002affffff000000000000000000000000000000000000000000000000824a546e03000000dfe04e7607000000cf45ed79020000004a0869b3010000000000000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f000000100000001100000012000000130000001400000015000000160000001700000018000000190000001a0000001b0000001c0000001d00000027360bb8c83200007b967fbd03000000fbc55dd61e000000f85bf38a0100000031644811c200000015cb943b030000008a301f5819000000f85bf38a020000002ecab946b4000000f85bf38a030000002ecab946b4000000f85bf38a040000002ecab946b4000000f85bf38a050000002ecab946b4000000f85bf38a060000002ecab946b4000000f85bf38a070000002ecab946b40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    print(X.slice_input(data))
    print(X.init_dict)
